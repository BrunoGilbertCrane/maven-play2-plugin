# FAQ

<div class="alert alert-info">
  A trick is missing ? Just open an <a href="https://github.com/cescoffier/maven-play2-plugin/issues">issue</a>, and even better
  fork the <a href="https://github.com/cescoffier/maven-play2-plugin/">project</a>, improve the documentation and send a pull request.
</div>

<a name="My_IDE_is_complaining_about_missing_classes"></a>
My IDE is complaining about missing classes (views, routes...)
--------------------------------------------------------------

<img src="images/faq-compilation-issue.png" alt="Missing view in Play 2 Controller" style="margin: 0 auto; display:block"/>

Play 2 is generating a couple of classes (views, routes...) that your code is using such as routes and views. To make your IDE more happy,
add <tt>target/scala-2.9.1/src_managed/main/</tt> as a source folder. Be careful to not modify such sources, as they will
be regenerated during the next compilation.

If you're using IDE's Maven support, you can use the <tt>build-helper-maven-plugin</tt> to add this source folder
automatically:

    <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
            <execution>
                <id>play2-add-managed-sources</id>
                <goals>
                    <goal>add-source</goal>
                </goals>
                <configuration>
                    <sources>
                        <source>
                        \${project.build.directory}/scala-2.9.1/src_managed/main
                        </source>
                    </sources>
                </configuration>
            </execution>
        </executions>
    </plugin>


<a name="Homebrew"></a>
My Homebrew installation from play 2 does not work
--------------------------------------------------

When <tt>PLAY2_HOME</tt> is using a [homebrew](http://mxcl.github.com/homebrew/) play 2 installation, you get:


    [INFO] --- play2-maven-plugin:1.2.0-SNAPSHOT:compile (default-compile) @ play2-authenticitytoken-sample ---
    /usr/local/Cellar/play/2.0/libexec/play: line 51: /usr/local/Cellar/play/2.0/libexec//usr/local/Cellar/play/2.0/
    libexec/../libexec/framework/build: No such file or directory

The problem comes from the homebrew installation of play using relative directories. The versions 1.2.0+ of the
${project.artifactId} manages this issue by using directly the play 2 executable from "/usr/local/bin/play"

<a name="MavenSbtSync"></a>
How do I keep in sync my SBT Metadata and my Maven metadata ?
-------------------------------------------------------------

For each _play_ invocations, the plugin build an environment containing the Maven metadata such as:

* _project.groupId_ : the Maven group Id
* _project.artifactId_ : the Maven artifact Id
* _project.version_ : the Maven version
* all other Maven properties_

So, to keep your version in sync, you need to edit your _project/Build.scala_ file and add:

    def fromEnv(name: String) = System.getenv(name) match {
      case null => None
      case value => Some(value)
    }

    val appName = fromEnv("project.artifactId").getOrElse("my-app")
    val appVersion = fromEnv("project.version").getOrElse("1.0-SNAPSHOT")
    // ...



